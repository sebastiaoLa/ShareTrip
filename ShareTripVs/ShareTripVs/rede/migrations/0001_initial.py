# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-05 16:13
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefone', models.CharField(max_length=255, verbose_name='telefone')),
                ('cpf', models.CharField(max_length=14, verbose_name='cpf')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bilhete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poltrona', models.IntegerField(verbose_name='poltrona')),
                ('passageiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passageiro', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['passageiro'],
                'verbose_name': 'bilhete',
                'verbose_name_plural': 'bilhetes',
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='nome')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endere\xe7o')),
            ],
            options={
                'ordering': ['nome'],
                'verbose_name': 'empresa',
                'verbose_name_plural': 'empresas',
            },
        ),
        migrations.CreateModel(
            name='Onibus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motorista', models.CharField(max_length=255, verbose_name='Motorista')),
                ('modelo', models.CharField(max_length=255, verbose_name='Modelo')),
            ],
            options={
                'ordering': ['motorista'],
                'verbose_name': 'onibus',
                'verbose_name_plural': 'onibus',
            },
        ),
        migrations.CreateModel(
            name='Viagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origem', models.CharField(max_length=255, verbose_name='origem')),
                ('destino', models.CharField(max_length=255, verbose_name='destino')),
                ('horaS', models.CharField(max_length=255, verbose_name='Hora de Saida')),
                ('horaC', models.CharField(max_length=255, verbose_name='Hora de Chegada')),
                ('data', models.DateTimeField(default=datetime.datetime(2017, 10, 5, 13, 13, 47, 340000), verbose_name='Data')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empresa', to='rede.Empresa')),
                ('onibus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Onibus', to='rede.Onibus')),
            ],
            options={
                'ordering': ['data'],
                'verbose_name': 'viagem',
                'verbose_name_plural': 'viagens',
            },
        ),
        migrations.AddField(
            model_name='bilhete',
            name='viagem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viagem', to='rede.Viagem'),
        ),
    ]
